// Temel sınıf
abstract class BaseEntity {
    private String id;
    private String name;

    public BaseEntity(String id, String name) {
        this.id = id;
        this.name = name;
    }

    public String getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public abstract void bilgiGoster();
}

// Interface\interface IBiletSistemi {
    void biletSat(Musteri musteri, Film film, Salon salon);
    void listeleMusteriler(Salon salon);
}

// Musteri sınıfı
class Musteri extends BaseEntity {
    public Musteri(String id, String name) {
        super(id, name);
    }

    @Override
    public void bilgiGoster() {
        System.out.println("Müşteri ID: " + getId() + ", İsim: " + getName());
    }
}

// Film sınıfı
class Film {
    private String name;
    private int duration; // dakika cinsinden
    private String genre;

    public Film(String name, int duration, String genre) {
        this.name = name;
        this.duration = duration;
        this.genre = genre;
    }

    public String getName() {
        return name;
    }

    public int getDuration() {
        return duration;
    }

    public String getGenre() {
        return genre;
    }

    public void bilgiGoster() {
        System.out.println("Film: " + name + " (" + genre + ", " + duration + " dakika)");
    }
}

// Salon sınıfı
class Salon extends BaseEntity {
    private Film film;
    private List<Musteri> musteriler;

    public Salon(String id, String name) {
        super(id, name);
        this.musteriler = new ArrayList<>();
    }

    public void setFilm(Film film) {
        this.film = film;
    }

    public Film getFilm() {
        return film;
    }

    public void addMusteri(Musteri musteri) {
        musteriler.add(musteri);
    }

    public List<Musteri> getMusteriler() {
        return musteriler;
    }

    @Override
    public void bilgiGoster() {
        System.out.println("Salon: " + getName() + " (ID: " + getId() + ")");
        if (film != null) {
            film.bilgiGoster();
        } else {
            System.out.println("Bu salonda henüz bir film gösterimi yapılmıyor.");
        }
    }
}

// Bilet sistemi
class BiletSistemi implements IBiletSistemi {
    @Override
    public void biletSat(Musteri musteri, Film film, Salon salon) {
        if (salon.getFilm() == null || !salon.getFilm().equals(film)) {
            System.out.println("Bu film bu salonda gösterilmiyor.");
        } else {
            salon.addMusteri(musteri);
            System.out.println(musteri.getName() + " müşterisine " + film.getName() + " filmi için bilet kesildi.");
        }
    }

    @Override
    public void listeleMusteriler(Salon salon) {
        System.out.println(salon.getName() + " salonundaki müşteriler:");
        for (Musteri musteri : salon.getMusteriler()) {
            System.out.println("- " + musteri.getName());
        }
    }
}

// Main class
public class SinemaSistemi {
    public static void main(String[] args) {
        // Örnek veriler
        Film film1 = new Film("Inception", 148, "Bilim Kurgu");
        Film film2 = new Film("The Dark Knight", 152, "Aksiyon");

        Salon salon1 = new Salon("1", "Salon 1");
        Salon salon2 = new Salon("2", "Salon 2");

        salon1.setFilm(film1);
        salon2.setFilm(film2);

        Musteri musteri1 = new Musteri("101", "Ali Veli");
        Musteri musteri2 = new Musteri("102", "Ayşe Fatma");

        BiletSistemi biletSistemi = new BiletSistemi();

        // İşlemler
        biletSistemi.biletSat(musteri1, film1, salon1);
        biletSistemi.biletSat(musteri2, film2, salon2);

        System.out.println();
        salon1.bilgiGoster();
        salon2.bilgiGoster();

        System.out.println();
        biletSistemi.listeleMusteriler(salon1);
        biletSistemi.listeleMusteriler(salon2);
    }
}
